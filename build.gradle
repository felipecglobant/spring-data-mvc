/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id "org.springframework.boot" version "2.0.1.RELEASE"
    id "io.freefair.lombok" version "5.3.0"
    id 'war'
    id 'jacoco'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.3.1.RELEASE'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.3.1.RELEASE'
    implementation 'org.postgresql:postgresql:42.2.14'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.3.1.RELEASE'
    testImplementation 'org.springframework.security:spring-security-test:5.3.3.RELEASE'
    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    /* Use if io.freefair.lombok is removed
    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
    */
}

group = 'com.exercise'
version = '0.0.1-SNAPSHOT'
description = 'api_mvc_data'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

war {
    baseName = 'spring_api'
    version =  '0.0.1'
    archiveName = 'spring_api.war'
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    toolVersion = "0.8.6"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1
            }
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}